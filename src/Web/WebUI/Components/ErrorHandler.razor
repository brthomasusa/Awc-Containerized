@inject ILogger<ErrorHandler> Logger
@inject NotificationService NotificationService
@using WebUI.Utilities

<CascadingValue Value="this" IsFixed="true">
    @ChildContent
</CascadingValue>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private void ShowErrorMessageAsync(string message)
    {
        ShowErrorNotification.ShowError(NotificationService!, message);
    }

    public void HandleExceptionAsync(Exception ex)
    {
        Logger.LogError(ex, ex.Message);

        switch (ex)
        {
            // TODO: Handle more specific exception
            case HttpRequestException _:
                ShowErrorMessageAsync("Failed to connect to the server.");
                break;
            default:
                ShowErrorMessageAsync("Something went wrong!");
                break;
        }
    }
}
